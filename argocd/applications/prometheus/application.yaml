apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argo
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  labels:
    release: kube-prometheus-stack
spec:
  destination:
    name: practice-cluster
    namespace: prometheus
  project: default
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    targetRevision: 52.1.0
    helm:
      skipCrds: true
      values: |-
        prometheus:
          prometheusSpec:
            remoteWrite:
              - url: https://thanos.rajesh-kumar.in/api/v1/receive
                basicAuth:
                  username:
                    name: grafana-creds-secret
                    key: thanos_receive_user
                  password:
                    name: grafana-creds-secret
                    key: thanos_receive_pass
            additionalScrapeConfigs: |
              - job_name: 'practice-cluster-metrics'
                scrape_interval: 30s
                scrape_timeout: 10s
                static_configs:
                  - targets: ['alertmanager-operated.prometheus.svc.cluster.local:9093','prometheus-node-exporter.prometheus.svc.cluster.local:9100','kube-prometheus-stack-kube-state-metrics.prometheus.svc.cluster.local:8080','neuvector-prometheus-exporter.cattle-neuvector-system.svc.cluster.local:8068']
                    labels:
                      cluster: 'practice-cluster'
        alertmanager:
          enabled: true
        nodeExporter:
          enabled: false
        grafana:
          env:
            GF_AUTH_GITHUB_ENABLED: "true"
            GF_USERS_ALLOW_SIGN_UP: "false"
            GF_AUTH_GITHUB_ALLOW_SIGN_UP: "true"
            GF_AUTH_GITHUB_ALLOWED_ORGANIZATIONS: "rajesh-personal-account"
          envValueFrom:
            GF_AUTH_GITHUB_CLIENT_ID:
              secretKeyRef:
                name: grafana-creds-secret
                key: client_id
            GF_AUTH_GITHUB_CLIENT_SECRET:
              secretKeyRef:
                name: grafana-creds-secret
                key: client_secret
          grafana.ini:
            server:
              root_url: "https://grafana.rajesh-kumar.in"
          defaultDashboardsEnabled: false
          defaultDashboardsTimezone: browser
          admin:
            existingSecret: grafana-creds-secret
            userKey: grafanaAdminUser 
            passwordKey: grafanaAdminPass
          ingress:
            enabled: true
            ingressClassName: traefik
            hosts:
              - grafana.rajesh-kumar.in
            tls:
              - secretName: rancher-tls-cert 
                hosts:
                  - grafana.rajesh-kumar.in
    chart: kube-prometheus-stack
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
